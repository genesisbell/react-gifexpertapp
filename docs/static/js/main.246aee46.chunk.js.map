{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categories","type","value","onChange","target","placeholder","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","getGifs","then","imgs","GifGridItem","className","src","alt","GifGrid","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAsCeA,MAnCf,YAAsC,IAAhBC,EAAe,EAAfA,cAAe,EAEGC,mBAAS,IAFZ,mBAE1BC,EAF0B,KAEdC,EAFc,KAkBjC,OACI,0BAAMC,SAXV,SAAsBC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACpBP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,OAC5CL,EAAc,OAOd,2BACIM,KAAK,OACLC,MAAOR,EACPS,SAnBZ,SAAsBN,GAClBF,EAAcE,EAAEO,OAAOF,QAmBfG,YAAY,a,mEC3BrB,WAAuBC,GAAvB,uBAAAC,EAAA,6DACGC,EADH,iDACmDC,UAAUH,GAD7D,+DAEqBI,MAAMF,GAF3B,cAEGG,EAFH,gBAGkBA,EAAUC,OAH5B,uBAGIC,EAHJ,EAGIA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtC,kBAaIM,GAbJ,6C,sBCyBQO,MAtBf,SAAuBf,GAAW,IAAD,EAEHb,mBAAS,CAC/BoB,KAAM,GACNS,SAAS,IAJgB,mBAEtBC,EAFsB,KAEfC,EAFe,KAiB7B,OAVAC,qBAAW,YDVR,SAAP,mCCWQC,CAAQpB,GACHqB,MAAM,SAAAC,GACHJ,EAAS,CACLX,KAAMe,EACNN,SAAS,SAGtB,CAAChB,IAEGiB,GCPIM,MAXf,YAAsC,EAAhBZ,GAAiB,IAAbC,EAAY,EAAZA,MAAOV,EAAK,EAALA,IAE7B,OACI,yBAAKsB,UAAU,0CACX,yBAAKC,IAAKvB,EAAKwB,IAAKd,IACpB,2BAAIA,KCsBDe,MAzBf,YAA6B,IAAX3B,EAAU,EAAVA,SAAU,EAGOe,EAAaf,GAAhCa,EAHY,EAGjBN,KAAaS,EAHI,EAGJA,QAIpB,OACI,6BACA,wBAAIQ,UAAU,qCAAqCxB,GAClDgB,GAAW,uBAAGQ,UAAU,oCAAb,cACR,yBAAKA,UAAU,aAEPX,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIkB,IAAKlB,EAAIC,IACLD,UCejBmB,MA/Bf,WAAwB,IAAD,EAEiB1C,mBAAS,CAAC,iBAF3B,mBAEZO,EAFY,KAEAR,EAFA,KAUnB,OACI,6BAEA,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAEQQ,EAAWe,KAAI,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACKA,SAAUA,EACV4B,IAAK5B,U,MCpB7B8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.246aee46.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AddCategory({setCategories}){\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    function handleChange(e){\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if( inputValue.length > 0){\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n                placeholder=\"Buscar\"\r\n            />      \r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;","export async function getGifs(category){\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=kojiDqFvxnUmivJmymflizx87Z0dlQrZ`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nfunction useFetchGifs( category ){\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( function(){\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n\r\n\r\nexport default useFetchGifs;","import React from 'react';\r\n\r\nfunction GifGridItem({id, title, url}){\r\n\r\n    return(\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nfunction GifGrid({category}){\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => \r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img} \r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nfunction GifExpertApp(){\r\n\r\n    const [categories, setCategories] = useState(['Demon Slayer']);\r\n\r\n\r\n    // function handleAdd(){\r\n    //    setCategories([...categories, 'nueva Categoria']);\r\n    // };\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories = {setCategories}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map(category =>\r\n                   <GifGrid \r\n                        category={category} \r\n                        key={category}\r\n                    />\r\n                )\r\n            }\r\n        </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}